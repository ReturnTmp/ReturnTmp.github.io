<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ReturnTmp</title>
  <icon>https://returntmp.github.io/icon.png</icon>
  <subtitle>Hello World</subtitle>
  <link href="https://returntmp.github.io/atom.xml" rel="self"/>
  
  <link href="https://returntmp.github.io/"/>
  <updated>2023-04-07T14:53:37.301Z</updated>
  <id>https://returntmp.github.io/</id>
  
  <author>
    <name>ReturnTmp</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android 配置 Jetpack Compose 环境</title>
    <link href="https://returntmp.github.io/2023/04/07/Android%E9%85%8D%E7%BD%AEJetpack-Compose%E7%8E%AF%E5%A2%83/"/>
    <id>https://returntmp.github.io/2023/04/07/Android%E9%85%8D%E7%BD%AEJetpack-Compose%E7%8E%AF%E5%A2%83/</id>
    <published>2023-04-07T13:21:20.000Z</published>
    <updated>2023-04-07T14:53:37.301Z</updated>
    
    
    <summary type="html">Android 配置 Jetpack Compose 环境
记录配置Jetpack Compose环境的一些坑~

直接创建kotlin项目或创建java项目后再配置均可

根目录 build.gradle
配置kotlin环境构建脚本
buildscript {
    ext.kotlin_version = &#39;1.4.32&#39;
    dependencies {
        classpath &quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version&quot;
    }
}


注意：里面的kotlin版本需要和自己的 gradl</summary>
    
    
    
    
    <category term="Android" scheme="https://returntmp.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android学习笔记</title>
    <link href="https://returntmp.github.io/2023/04/04/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://returntmp.github.io/2023/04/04/Android%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-04-04T04:53:12.000Z</published>
    <updated>2023-04-07T01:16:28.395Z</updated>
    
    
    <summary type="html">本文需要有一定开发基础，对纯小白并不友好，仅作个人学习笔记，配置环境及安装应用省略~

应用资源概览
资源是指代码使用的附加文件和静态内容，例如位图、布局定义、界面字符串、动画说明等。将应用资源分离之后，您便可使用在项目的 R 类中生成的资源 ID 对其进行访问。

分组资源类型
常见分组类型：

MyProject/
    src/
        MyActivity.java
    res/
        drawable/
            graphic.png
        layout/
            main.xml
            info.x</summary>
    
    
    
    
    <category term="Android" scheme="https://returntmp.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android-Webview</title>
    <link href="https://returntmp.github.io/2023/04/04/Android-Webview/"/>
    <id>https://returntmp.github.io/2023/04/04/Android-Webview/</id>
    <published>2023-04-04T02:41:26.000Z</published>
    <updated>2023-04-05T13:30:27.130Z</updated>
    
    
    <summary type="html">前言
我们团队有一个Electron桌面应用需要我移植到安卓应用中，分析之后我觉得本身桌面应用基本没有采用复杂框架，同时electron的原生模块并不多，所以选用直接内嵌webview，同时使用原生安卓模块替换electron模块

介绍
Android WebView组件是一个成熟的浏览器，作为子类实现，以将其嵌入到我们的Android应用程序中。

layout xml嵌入方式
&lt;WebView
        android:id=&quot;@+id/webview&quot;
        android:layout_alignParentTop=&quot;true&quot;
        android:lay</summary>
    
    
    
    
    <category term="Android" scheme="https://returntmp.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
